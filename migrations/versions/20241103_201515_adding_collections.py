"""adding collections

Revision ID: 9a6ba4254f3d
Revises: 778969b20414
Create Date: 2024-11-03 20:15:15.166446

"""
from alembic import op
import sqlalchemy as sa


import os
environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get("SCHEMA")
schema = SCHEMA if environment == "production" else None

# revision identifiers, used by Alembic.
revision = '9a6ba4254f3d'
down_revision = '778969b20414'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('collections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('collection_movies',
    sa.Column('movie_id', sa.Integer(), nullable=False),
    sa.Column('collection_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['collection_id'], ['collections.id'], ),
    sa.ForeignKeyConstraint(['movie_id'], ['movies.id'], ),
    sa.PrimaryKeyConstraint('movie_id', 'collection_id')
    )
    with op.batch_alter_table('crew', schema=schema) as batch_op:
        batch_op.alter_column('role',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
    if environment == "production":
        op.execute(f"ALTER TABLE collections SET SCHEMA {SCHEMA};")
    if environment == "production":
        op.execute(f"ALTER TABLE collection_movies SET SCHEMA {SCHEMA};")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('crew', schema=schema) as batch_op:
        batch_op.alter_column('role',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)

    op.drop_table('collection_movies')
    op.drop_table('collections')
    # ### end Alembic commands ###
